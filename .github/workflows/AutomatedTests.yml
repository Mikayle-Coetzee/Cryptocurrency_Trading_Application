name: Android Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'  # Change according to your project's Java version

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Gradle 8.9
        run: |
          wget https://services.gradle.org/distributions/gradle-8.9-bin.zip
          unzip gradle-8.9-bin.zip -d /opt/gradle
          echo "/opt/gradle/gradle-8.9/bin" >> $GITHUB_PATH
          rm gradle-8.9-bin.zip

      - name: Start Android Emulator
        run: |
          echo "Starting Android Emulator"
          echo "no" | sdkmanager --licenses
          sdkmanager "system-images;android-30;default;x86_64"
          echo "no" | $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &

          # Wait for the emulator to boot
          for i in {1..30}; do
            if adb shell getprop sys.boot_completed | grep -m 1 -q '1'; then
              break
            fi
            echo "Waiting for emulator to boot..."
            sleep 5
          done

      - name: Build with Gradle
        run: gradle build --warning-mode all

      - name: Run Instrumentation Tests
        run: gradle connectedAndroidTest  # Use the installed Gradle

      - name: Run Unit Tests
        run: gradle test  # Use the installed Gradle
