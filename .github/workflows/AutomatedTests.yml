name: Android Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Set up Android SDK
        run: |
          # Install Android SDK
          mkdir -p $HOME/Android/Sdk
          cd $HOME/Android/Sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
          unzip commandlinetools-linux-7583922_latest.zip -d tools
          rm commandlinetools-linux-7583922_latest.zip

          # Set environment variables
          echo "export ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "export PATH=$PATH:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

          # Accept licenses and install platform-tools and emulator
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-30" "system-images;android-30;default;x86_64"

      - name: Start Android Emulator
        run: |
          echo "Starting Android Emulator"
          sdkmanager --install "system-images;android-30;default;x86_64"
          echo "no" | $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &

          # Wait for the emulator to boot
          for i in {1..30}; do
            if adb shell getprop sys.boot_completed | grep -m 1 -q '1'; then
              break
            fi
            echo "Waiting for emulator to boot..."
            sleep 5
          done

      - name: Build with Gradle
        run: ./gradlew build --warning-mode all

      - name: Run Instrumentation Tests
        run: ./gradlew connectedAndroidTest

      - name: Run Unit Tests
        run: ./gradlew test
