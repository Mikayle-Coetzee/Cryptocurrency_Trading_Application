name: Android Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up JDK (adjust Java version if needed)
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30   # Adjust the API level if needed
          target: default
          arch: x86_64
          emulator: true
          script: true  # Script option for instrumented tests
          
      # Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Start an Android Emulator (required for instrumented tests)
      - name: Start Emulator
        run: |
          adb devices
          adb wait-for-device
          adb shell input keyevent 82 &
        shell: bash

      # Run Instrumentation Tests (UI tests)
      - name: Run Instrumentation Tests
        run: ./gradlew connectedAndroidTest
        env:
          ADB_INSTALL_TIMEOUT: 20 # Increase if emulator startup takes time

      # Run Unit Tests
      - name: Run Unit Tests
        run: ./gradlew test

      # Stop the Emulator
      - name: Stop Emulator
        run: adb -s emulator-5554 emu kill
